import React, { useRef, useState } from "react";
import { NavLink } from "react-router-dom";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import "swiper/css/navigation";
import "../Project01/Project01.scss";
import SwiperCore, { Navigation } from "swiper";

import "swiper/css/effect-coverflow";
import { EffectCoverflow } from "swiper";

const DB = [
  {
    id: 1,
    title: "2022 BIFF",
    info: "Î≥∏ ÌîÑÎ°úÏ†ùÌä∏Îäî ReactÎ•º Ïù¥Ïö©ÌïòÏó¨, Ìôà, Î°úÍ∑∏Ïù∏, Ìè¨ÏºìÎ™¨ Í≤åÏûÑ, Ìä∏Î†àÏù¥ÎÑà Îì±Î°ù Îì±Ïùò ÌéòÏù¥ÏßÄÎ°ú Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÎäî Web Aplication Project ÏûÖÎãàÎã§. firebaseÎ•º ÌÜµÌï¥ÏÑú ÏÇ¨Ïö©ÏûêÍ∞Ä google Í≥º githubÎ•º ÌÜµÌï¥ Î°úÍ∑∏Ïù∏ Ìï†ÏàòÏûàÏúºÎ©∞, ÏÇ¨Ïö©ÏûêÏùò Ï†ïÎ≥¥Î•º firebaseÏóê realtime databaseÏóê Ï†ÄÏû•ÌïòÏó¨ Ïã§ÏãúÍ∞ÑÏúºÎ°ú Îì±Î°ù Î∞è ÏàòÏ†ïÏù¥ Í∞ÄÎä•ÌïòÎèÑÎ°ù Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§. ÎòêÌïú cloudinaryÎ•º Ïù¥Ïö©ÌïòÏó¨ ÏÇ¨Ïö©ÏûêÏùò Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÄÏû•ÏùÑ Ìï† Ïàò ÏûàÎèÑÎ°ù Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§.",
    tools: "REACT / JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/BIFF/",
  },
  {
    id: 2,
    title: "ÎÇòÏù¥ÌÇ§ Nike",
    info: "Î≥∏ ÌîÑÎ°úÏ†ùÌä∏Îäî ReactÎ•º Ïù¥Ïö©ÌïòÏó¨, Ìôà, Î°úÍ∑∏Ïù∏, Ìè¨ÏºìÎ™¨ Í≤åÏûÑ, Ìä∏Î†àÏù¥ÎÑà Îì±Î°ù Îì±Ïùò ÌéòÏù¥ÏßÄÎ°ú Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÎäî Web Aplication Project ÏûÖÎãàÎã§. firebaseÎ•º ÌÜµÌï¥ÏÑú ÏÇ¨Ïö©ÏûêÍ∞Ä google Í≥º githubÎ•º ÌÜµÌï¥ Î°úÍ∑∏Ïù∏ Ìï†ÏàòÏûàÏúºÎ©∞, ÏÇ¨Ïö©ÏûêÏùò Ï†ïÎ≥¥Î•º firebaseÏóê realtime databaseÏóê Ï†ÄÏû•ÌïòÏó¨ Ïã§ÏãúÍ∞ÑÏúºÎ°ú Îì±Î°ù Î∞è ÏàòÏ†ïÏù¥ Í∞ÄÎä•ÌïòÎèÑÎ°ù Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§. ÎòêÌïú cloudinaryÎ•º Ïù¥Ïö©ÌïòÏó¨ ÏÇ¨Ïö©ÏûêÏùò Ïù¥ÎØ∏ÏßÄÎ•º Ï†ÄÏû•ÏùÑ Ìï† Ïàò ÏûàÎèÑÎ°ù Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§.",
    tools: "JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/YouTube/",
  },
  {
    id: 3,
    title: "YouTube",
    info: "Ïú†ÌäúÎ∏å ÏÇ¨Ïù¥Ìä∏Î•º ÌÅ¥Î°†ÏΩîÎî©ÌïòÏòÄÏäµÎãàÎã§. Í≤ÄÏÉâÍ∏∞Îä•, ÎπÑÎîîÏò§ ÌÅ¥Î¶≠Ïãú ÏÉÅÏÑ∏ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô Îì±ÏùÑ Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§.",
    tools: "REACT / JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/YouTube/",
  },

  {
    id: 4,
    title: "Find Golden Snitch!",
    info: "Ìï¥Î¶¨Ìè¨ÌÑ∞Ïùò ÌÄ¥ÎîîÏπò Í≤ΩÍ∏∞Î•º ÌÖåÎßàÎ°ú Ìïú Í≤åÏûÑÏûÖÎãàÎã§. Í≥®Îì† Ïä§ÏúÑÏπò 10Í∞úÎ•º Ï∞æÏúºÎ©¥ Í≤åÏûÑ CLEAR !",
    tools: "JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/YouTube/",
  },
  {
    id: 5,
    title: "Business Card Maker",
    info: "Card MakerÏûÖÎãàÎã§. FirebaseÎ•º Ïù¥Ïö©Ìï¥ Î°úÍ∑∏Ïù∏ Í∏∞Îä•ÏùÑ Íµ¨ÌòÑÌïòÏòÄÍ≥†...",
    tools: "REACT / JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/YouTube/",
  },
  {
    id: 6,
    title: "2022 PORTFOLIO",
    info: "2022ÎÖÑ Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏÇ¨Ïù¥Ìä∏ÏûÖÎãàÎã§.",
    tools: "REACT / JavaScript / HTML5 / CSS / Figma / Í∞úÏù∏ÏûëÏóÖ 100%",
    url: "https://zoseeee.github.io/YouTube/",
  },
];

const Project01 = () => {
  const [swiper, setSwiper] = useState(null);

  SwiperCore.use([Navigation]);

  const navigationPrevRef = useRef(null);
  const navigationNextRef = useRef(null);

  const swiperParams = {
    navigation: {
      prevEl: navigationPrevRef.current,
      nextEl: navigationNextRef.current,
    },
    onBeforeInit: (swiper) => {
      swiper.params.navigation.prevEl = navigationPrevRef.current;
      swiper.params.navigation.nextEl = navigationNextRef.current;
      swiper.navigation.update();
    },
    onSwiper: setSwiper,
  };

  return (
    <section className="project01 sec" id="project">
      <h2>MY PROJECT</h2>
      <ul className="lnb">
        <li>
          <NavLink
            className={({ isActive }) =>
              "navLink" + (isActive ? ".active" : "")
            }
            to="/"
          >
            01
            <span> PROJECT</span>
          </NavLink>
        </li>
        <li>
          <NavLink
            className={({ isActive }) =>
              "navLink" + (isActive ? ".active" : "")
            }
            to="/project02"
          >
            02
            <span
            // className={({ isActive }) => "navLink" + (isActive ? ".on" : "")}
            >
              Web Design
            </span>
          </NavLink>
        </li>
      </ul>
      <Swiper
        {...swiperParams}
        ref={setSwiper}
        loop={true}
        effect={"coverflow"}
        centeredSlides={true}
        slidesPerView={"auto"}
        coverflowEffect={{
          rotate: 50,
          stretch: 0,
          depth: 100,
          modifier: 1,
          slideShadows: true,
        }}
        modules={[Navigation, EffectCoverflow]}
        className="mySwiper"
      >
        {DB.map((slide, IDX) => (
          <SwiperSlide className="slide" key={slide.id}>
            <figure className="item">
              <img
                src={
                  process.env.PUBLIC_URL +
                  "./images/project_0" +
                  (IDX + 1) +
                  ".png"
                }
                alt=""
              />
              <div className="des-wrapper">
                <div className="des">
                  <div className="title">
                    <h3>{slide.title}</h3>
                    <p className="tools">{slide.tools}</p>
                  </div>
                  <div className="button-wrapper">
                    <button>
                      <a
                        href={slide.url}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        WebPage
                      </a>
                    </button>
                    <button>
                      <a
                        href={slide.url}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        Github Code
                      </a>
                    </button>
                  </div>
                </div>
              </div>
            </figure>
          </SwiperSlide>
        ))}
        <div className="swiper-button">
          <button ref={navigationPrevRef} className="prevBtn">
            ü°ê
          </button>
          <button ref={navigationNextRef} className="nextBtn">
            ü°í
          </button>
        </div>
      </Swiper>
    </section>
  );
};

export default Project01;
